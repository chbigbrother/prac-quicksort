package com.yeonjee.practice01;

public class QuickSort {
    //Quicksort has a O(NlogN) time complexity
    //useful when you frequently delete and insert data
    public void sort(int[] data, int start, int end){
    	int key = start;
    	int last = end;
    	int pivot = data[(start + end)/2];
    	
    	do {
    		while(data[key] < pivot) key++;
    		while(data[last] > pivot) last--;
    		if(key <= last) { 
    			int temp = data[key];
    			data[key] = data[last];
    			data[last] = temp;
    			key++;
    			last--;
    		}
    	}while(key <= last); 
    	
    	if(start < last) sort(data, start, last);
    	if(end > key) sort(data, key, end);
    }
    
    public static void main(String[] args) {
    	int data[] = {0, 5, 10, 54, 39, 1};
    	
    	QuickSort quick = new QuickSort();
    	quick.sort(data, 0, data.length - 1);
    	for(int i=0; i<data.length; i++) {
    		System.out.println(data[i]);
    	}
    }
}
